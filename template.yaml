AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Timeout: 10

Parameters:
  SlackWebhookUrl:
    Type: String

Resources:
  BillingIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: "NotifySlackToBillingLambdaPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "ce:GetCostAndUsage"
                Resource: "*"
  LambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: app.lambda_handler
      Runtime: python3.9
      Environment:
        Variables:
          SLACK_WEBHOOK_URL: !Ref SlackWebhookUrl
      Role: !GetAtt BillingIamRole.Arn
      Layers:
        - arn:aws:lambda:ap-northeast-1:770693421928:layer:Klayers-p39-requests:11
      Tags:
        - Key: map-migrated
          Value: migMCX7KD5RU8
      Events:
        NotifySlack:
          Type: Schedule
          Properties:
            Schedule: cron(30 23 * * ? *)

Outputs:
  LambdaFunction:
    Description: "Lambda Function ARN"
    Value: !GetAtt LambdaFunction.Arn

  LambdaFunctionIamRole:
    Description: "Implicit IAM Role created for Lambda function"
    Value: !GetAtt BillingIamRole.Arn
